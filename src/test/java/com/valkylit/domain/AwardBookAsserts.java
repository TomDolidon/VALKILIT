package com.valkylit.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AwardBookAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAwardBookAllPropertiesEquals(AwardBook expected, AwardBook actual) {
        assertAwardBookAutoGeneratedPropertiesEquals(expected, actual);
        assertAwardBookAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAwardBookAllUpdatablePropertiesEquals(AwardBook expected, AwardBook actual) {
        assertAwardBookUpdatableFieldsEquals(expected, actual);
        assertAwardBookUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAwardBookAutoGeneratedPropertiesEquals(AwardBook expected, AwardBook actual) {
        assertThat(expected)
            .as("Verify AwardBook auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAwardBookUpdatableFieldsEquals(AwardBook expected, AwardBook actual) {
        assertThat(expected)
            .as("Verify AwardBook relevant properties")
            .satisfies(e -> assertThat(e.getYear()).as("check year").isEqualTo(actual.getYear()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAwardBookUpdatableRelationshipsEquals(AwardBook expected, AwardBook actual) {
        assertThat(expected)
            .as("Verify AwardBook relationships")
            .satisfies(e -> assertThat(e.getBook()).as("check book").isEqualTo(actual.getBook()))
            .satisfies(e -> assertThat(e.getAward()).as("check award").isEqualTo(actual.getAward()));
    }
}
